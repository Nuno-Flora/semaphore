---
- hosts: all
  become: true
  gather_facts: yes
  
  tasks:
    # Debian/Ubuntu specific tasks
    - name: Update apt cache and upgrade (Debian/Ubuntu)
      when: ansible_facts['os_family'] == "Debian"
      block:
        - name: Update apt cache
          apt:
            update_cache: yes
            cache_valid_time: 3600
          
        - name: Upgrade all packages
          apt:
            upgrade: yes
            force_apt_get: yes
            dpkg_options: 'force-confdef,force-confold'
          register: apt_upgrade_result
          
        - name: Clean up unused packages (Debian/Ubuntu)
          apt:
            autoremove: yes
            autoclean: yes
            
        - name: Check if reboot is required (Debian/Ubuntu)
          stat:
            path: /var/run/reboot-required
          register: reboot_required_debian
          
        - name: Notify if reboot is required (Debian/Ubuntu)
          debug:
            msg: "Debian/Ubuntu system requires a reboot"
          when: reboot_required_debian.stat.exists

    # Alpine specific tasks
    - name: Update and upgrade Alpine Linux
      when: ansible_facts['os_family'] == "Alpine"
      block:
        - name: Update package list (Alpine)
          apk:
            update_cache: yes
          
        - name: Upgrade all packages (Alpine)
          apk:
            upgrade: yes
          register: apk_upgrade_result
            
        - name: Clean package cache (Alpine)
          apk:
            clean: yes
            
        - name: Check if kernel was updated (Alpine)
          shell: |
            if [ -f /run/reboot-required ] || [ "$(uname -r)" != "$(ls -1 /lib/modules | sort -V | tail -n 1)" ]; then
              echo "reboot_needed"
            fi
          register: alpine_kernel_check
          changed_when: false
          
        - name: Notify if reboot is required (Alpine)
          debug:
            msg: "Alpine system requires a reboot for kernel update"
          when: alpine_kernel_check.stdout == "reboot_needed"

    # Report upgrade status for all systems
    - name: Report system status
      debug:
        msg: "{{ ansible_facts['os_family'] }} system updated successfully"
